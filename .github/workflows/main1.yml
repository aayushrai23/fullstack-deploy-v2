name: Fullstack CI/CD to EC2

on:
  push:
    branches:
      - main

jobs:
  # 1Ô∏è‚É£ BUILD STAGE
  build:
    name: Build Frontend & Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # FRONTEND BUILD
      - name: Install and Build Frontend
        working-directory: ./frontend
        run: |
          echo "üîß Installing and building frontend..."
          npm install
          npm run build

      # BACKEND INSTALL
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: |
          echo "üîß Installing backend dependencies..."
          npm install

      # UPLOAD BUILD ARTIFACTS (Optional for debugging)
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            frontend/build
            backend

  # 2Ô∏è‚É£ TEST STAGE
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # FRONTEND TESTS
      - name: Run Frontend Tests
        working-directory: ./frontend
        run: |
          echo "üß™ Running frontend tests..."
          npm ci
          npm test --if-present || echo "No frontend tests found. Skipping..."

      # BACKEND TESTS
      - name: Run Backend Tests
        working-directory: ./backend
        run: |
          echo "üß™ Running backend tests..."
          npm ci
          npm test --if-present || echo "No backend tests found. Skipping..."

  # 3Ô∏è‚É£ DEPLOY STAGE
  deploy:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # COPY FILES TO EC2
      - name: üì¶ Copy files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./*"
          target: "/home/ubuntu/app"

      # RESTART SERVICES ON EC2
      - name: üöÄ Restart backend & NGINX on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "üîÑ Deploying latest code on EC2..."

            # Backend setup
            cd /home/ubuntu/app/backend
            npm install --production
            pm2 restart backend || pm2 start server.js --name backend

            # Frontend build
            cd ../frontend
            npm install
            npm run build

            # Restart NGINX
            sudo systemctl restart nginx

            echo "‚úÖ Deployment complete!"
